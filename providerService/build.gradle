plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
}

group = 'xyz.rensaa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'com.google.guava:guava:28.2-jre'
	implementation 'org.web3j:core:4.5.14'
	implementation 'org.web3j:codegen:4.5.14'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

sourceSets.main.java.srcDirs += "${buildDir}/generated/sources/contracts/xyz/rensaa/providerservice"

task generateContractWrappers {
	group = "Codegen"
	description = "Generates java wrapper classes based compiled .json truffle contracts"
	PatternFilterable tree = fileTree('../contracts/build/contracts').include("*.json")
	tree.each { File file ->
		javaexec {
			description = "Generates java wrapper classes based compiled .json truffle contracts"
			classpath = sourceSets.main.runtimeClasspath
			args(file.toString(),'-p','xyz.rensaa.providerservice','-o','build/generated/sources/contracts')
			main = "org.web3j.codegen.TruffleJsonFunctionWrapperGenerator"
		}
	}
}

