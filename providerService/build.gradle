plugins {
	id 'org.springframework.boot' version '2.2.4.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'com.palantir.baseline' version '3.3.0'
	id 'org.inferred.processors' version '3.3.0'
}

group = 'xyz.rensaa'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'
targetCompatibility = '11'

repositories {
	mavenCentral()
	maven {
    	url "http://palantir.bintray.com/releases"
  	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.web3j:core:4.5.5'
	implementation 'org.web3j:codegen:4.5.14'
	implementation 'com.palantir.safe-logging:safe-logging:1.13.0'
	implementation 'com.palantir.safe-logging:preconditions:1.13.0'

	testImplementation('org.springframework.boot:spring-boot-starter-test') {
		exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
	}
}

test {
	useJUnitPlatform()
}

sourceSets.main.java.srcDirs += "${buildDir}/generated/sources/contracts/xyz/rensaa/providerservice"

task generateContractWrappers {
	group = "Codegen"
	description = "Generates java wrapper classes based compiled .json truffle contracts"
	doLast {
		PatternFilterable tree = fileTree('../contracts/build/contracts').include("*.json")
		tree.each { File file ->
			javaexec {
				description = "Generates java wrapper classes based compiled .json truffle contracts"
				classpath = sourceSets.main.runtimeClasspath
				args(file.toString(),'-p','xyz.rensaa.providerservice','-o','build/generated/sources/contracts')
				main = "org.web3j.codegen.TruffleJsonFunctionWrapperGenerator"
			}
		}
	}
}

compileJava {
	dependsOn tasks.generateContractWrappers
}